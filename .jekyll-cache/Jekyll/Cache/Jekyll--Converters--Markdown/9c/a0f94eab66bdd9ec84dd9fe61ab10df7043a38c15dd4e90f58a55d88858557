I"­(<p>Over the last several months Iâ€™ve had the opportunity to look for a job which has been both fun and, of course, frustrating.  For the first time in my career, tech or otherwise, Iâ€™ve been in a position where I didnâ€™t have to say yes to the first thing that came along and where Iâ€™ve been able to say no to places I didnâ€™t feel were a good fit for me for whatever reason.</p>

<p>Along the way, I came across a couple of patterns which I seek here to document and analyze and hopefully use as a framework for how I might approach the next job search or a candidate the next time Iâ€™m responsible for hiring.  The common thread that runs through it all is my thesis that the asymetry of power dynamics that exist between the candidate and the employer prevents ideal outcomes and that both parties should seek to equalize their relationship as quickly as possible in order to discover actual value, fit, and potential.  The way to do this is via modifying hiring processes and giving both sides the benefit of the doubt.</p>

<h2 id="screening">Screening</h2>

<p>In most cases, a candidate has the opportunity to go through an initial screening before moving forward.  Occasionally I have been knocked out of the running for a job I was really interested in early on during this screening process.  It was usually because I didnâ€™t have the experience they were looking for or I was judged to not be sufficiently proficient with their required technologies.  This might seem harsh, but in fact, is an ideal way to normalize power dynamics very quickly.  Hiring managers and screeners should of course do this in as polite a way as possible.</p>

<p>This is, however, an opportunity as a candidate to live up to your responsibilities.  If you are not interested, if you donâ€™t like what the company is building, if you donâ€™t get a good vibe, whatever it may be, tell the hiring company immediately.  Itâ€™s a simple way to let everyone off the hook, be open and honest, and ensure that you arenâ€™t wasting anyoneâ€™s time.  Going all the way through the process to simply get the offer so that you can turn it down is unfair and disrespectful to people who are investing time in you.  If you are geuinely unsure, or if there is some late stage development in salary negotioations, well that canâ€™t be helped.  But if you are applying in bad faith, for leverage, that is a mistake and a misaplication of your power as a sought after job candidate.</p>

<p>To be honest, in my most recent search there were a couple of times where I shouldâ€™ve said no earlier than I did.  I never went all the way to an offer, but I did go through to second conversations or code tests before ultimately declining.  I should have trusted my gut earlier and saved myself and the teams I was talking with some valuable time.  While I was never exploring options in bad faith, I will endevor to do better with this next time.</p>

<h2 id="whiteboarding">Whiteboarding</h2>

<p>Whiteboarding is a classic example of a dumb thing to do in a technical interview, or so I say.  There is a lot of writing out there on it and why it does a bad job at helping hiring managers identify talent, and I will leave it as an exercise to the reader to do some further research on the matter but <a href="https://twitter.com/sarahmei/status/578717024915947521">Sarah Meiâ€™s tweet storm on the subject</a> is an excelent synopsis of my feelings on the matter.</p>

<p>Consequently, I donâ€™t have much to add on the specifics of it, EXCEPT: see whiteboarding for what it is:  An expression of a power dynamic.  In this particular power dynamic, the employer has the answer and seeks to make a candidate uncomfortable, act under perceived external pressure, and potentially fail a task that they otherwise would be able to do if it werenâ€™t for artifical circumstances.</p>

<p>The easiest way to remove this particular imbalance is to not require whiteboard tests and, if you are so lucky and so inclined, choose not to interview with companies that require it.</p>

<h2 id="code-tests">Code Tests</h2>

<p>Oh, sweet jesus.  Code tests.  How do you get to be a developer who doesnâ€™t have to do a code test?  I long to reach that levelâ€¦  In the meantime, however, code tests are part of the gauntlet that must be run.  Having done a fair share, how can we think about how to structure them and evaluate them in order to determine how they reinforce or breakdown asymetry in the hiring process?</p>

<p>In general, I have found code tests to be onerous and annoying.  When a test is complex, overly specified, and/or requires the use of specific technologies or frameworks, the test, and therefore the employer is not respecting a candidates time.  Instead, as a hiring manager, we should ask: what is the minimum requirement of this test that will demonstrate that which I feel I need to see?  Do you really need a full Rails app deployed to Heroku?</p>

<p>I think a corallary of this is, once I know what that minimum is, why is a current portfolio of work not sufficient?  Further, why is an in person interview and discussion of existing code, not a sufficient and prefered way of learning about a candidate and their technical skills?  If it is that your time is too valuable, perhaps the initial screening was not sufficient?</p>

<p>When a test is timed and observed, you are essentially doing in home whiteboarding tests.  These sorts of tests fail for all the same reasons as whiteboarding and should be dismissed out of hand.</p>

<p>And worst of all is the free work code test: here is a feature we are working on.  Spend as long on it as you can and show us the end result.  Remember!  This should be production code!  You are being asked to work for free and, again, these requests should be dismissed.</p>

<p>So how do we equalize the imbalance?  One way is to address the competency question through existing work, as I mentioned above.  This is how technical interviews were done at Spoon University, which I really enjoyed.  Candidates brought in work that they were proud of and had the opportunity to talk about it with members of the tech team.  It lead, all most always, to a pleasant and useful discussion.</p>

<p>One further idea: Can you let the candidate design their own code test?  Perhaps there is something they are interested in learning, perhaps you can encourage this, offer resources, and allow the candidate an opportunity to demonstrate their willingness to fail, ability to learn, and go getâ€™em attitude, all things that companies say they love?</p>

<h2 id="power-plays">Power Plays</h2>

<p>The worst experience I had in my whole process was a series of blatent power plays orchestrated by the CEO of a company I had gone through many rounds of rather intense interviewing.  Whether it was showing up 45 minutes late, keeping me longer than the length of the appointment, or asking me questions about my mother, why I am unable to complete large tasks in my personal life, or what I like to watch on youtube, it was, on the whole, perposterous and unprofessional.</p>

<p>After I had declined, the manager I had been interviewing with and whom I liked very much, suggested that I should give the CEO another chance and do a walk and talk with him.</p>

<p>Beyond the simple act of manipulating the power dynamic in order to ask inappropriate interview questions, I was now being asked to give the CEO another chance.  What, I wonder, would have happened if I had not been made the offer?  Would they have given me another chance?  Unlikely.</p>

<p>Companies that use power plays so openly, and then expect a candidate to repair the relationship, have larger problems than the scope of this article.</p>

<h2 id="exploding-offers">Exploding Offers</h2>

<p>Exploding offers are definitely part of the asymetry of power, but they exist in order to counter act a tactic used by candidates to negotiate salary.  If I have three offers, I can negotiate the employer up.  If an employer extends an offer which goes away, quickly, they prevent the candidate from assembling the competing offers.  This prompts a decision from candidates which does not nessecarily result in the best outcome for them or for the employer.  Yes, maybe you get someone to commit to you and maybe it costs you 10% less in salary, but did that person really want to come work for you in the first place?</p>

<p>As a candidate, I would argue that your responsibility in handling offers is to make a decision and negotiate with the employer who has made the offer individually and in isolation.  Remove and equalize your asymetric power, and simply consider the offer on hand and negotiate salary with the employer in good faith.  If you can remove the issue of the salary, simply ask yourself, regardless of any deadline, are you willing to commit to the company in good faith and with enthusiasim?</p>

<p>As an employer, I think the bare minimum of time to offer a candidate should be roughly equal to how long they have spent in your pipeline / process.  This should be made with the expectation that if you loose the candidate to other offers, it wasnâ€™t meant to be.</p>

<h2 id="feedback">Feedback</h2>

<p>When things are not a match, I have often been told that the employer is not able to give feedback.  When I have declined, I have often been asked for feedback.  Why does this mixed access to feedback exist?  Employer liability seeks to prevent someone from telling a candidate that they were not accepted for a reason that they canâ€™t not accept someone.  But no such liabilites exist for candidates so they are expected to help the employer improve their process.</p>

<p>How to improve?  As an employer, offer feedback!  Especially on code tests!  As a candidate, if requested, offer real and helpful feedback.  If we both give each other the benefit of the doubt, it is possible to conceivable that we will be able to mutually help each other and in the process help hiring in general.</p>

<h2 id="in-conclusion">In conclusion!</h2>

<p>Why is the use of asymetry important to discover in a hiring process?  Because it is a potential indication of how that candidate will treat an employer and how that employer will treat the new employee.  There are things that both sides can do to eqalize power dynamics and if they do so, they will have better outcomes and improve processes faster.</p>
:ET