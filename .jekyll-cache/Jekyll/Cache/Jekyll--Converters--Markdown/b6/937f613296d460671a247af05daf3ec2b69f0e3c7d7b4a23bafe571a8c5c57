I"do<p>I recently started working with <a href="http://shoesrb.com">Shoes</a> as part of making a game and being inspired to do so by some talks at RubyConf.  Shoes is an awesome little toolkit for making GUI interfaces for your code, written in Ruby.  I also recently had need to make a rainbow using Shoes and thought it might be a helpful exercise to write up my process to share with you.</p>

<p>Also, I‚Äôm going to write this with the idea that you have just installed shoes and that this is maybe one of the first few things you‚Äôve ever done in shoes.  I‚Äôm also writing this as if maybe you are new or newish to Ruby.  If that‚Äôs not you and you still want your rainbow, just skoodle on down to the end.  Yes?</p>

<p>Ok, so let‚Äôs start making this rainbow, shall we?</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
<span class="k">end</span>
</code></pre></div></div>

<p>It‚Äôs so beautiful!  And there isn‚Äôt even anything there yet.  It‚Äôs just an old window 600 by 600 on your computer screen, but‚Ä¶ that‚Äôs still sorta cool, isn‚Äôt it?  Let‚Äôs add a stack that‚Äôs going to hold all of our colors.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Stacks are containers for things in shoes.  And this is looking pretty good, hey?  But it‚Äôs still just a window and there‚Äôs nothing much to see here cause there‚Äôs nothing in the stack.  Let‚Äôs fix that.</p>

<p>Lets reach for an easy shape to start with.  I like <code class="language-plaintext highlighter-rouge">rects</code> cause they are rectangles and they are pretty easy to understand.  They take a few arguments: the left point, the top point, the width of the rectangle, and the height of the rectangle.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Cool.  That‚Äôs more like it!  That‚Äôs a rectangle alright.  Now, in Shoes the left is the left side of the window.  The top is the top of the window.  That makes sense!  What‚Äôs a little confusing, maybe is that if we want another rectangle below or under or first one we have to increase the top number.  This is the top offset, so the lower in the window, the higher the value.  Not too confusing, though, yes?  Lets give our little rectangle a friend.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">30</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Sweeeeeeet.  But this isn‚Äôt very‚Ä¶ rainbowy.  We‚Äôre missing some serious color.  Fill!</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">fill</span> <span class="n">red</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
    
    <span class="n">fill</span> <span class="n">blue</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">30</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Fill is like your photoshop paint bucket, it defines the color inside the shape you‚Äôre drawing.  Shoes is nice, and also smart, so it already knows the color red.  Thanks, Shoes!  Now if you look at this little program you‚Äôre gonna notice the black border around the rectangles.  Um, also, again, hate to say it, not üëè very üëè rainbowy üëè.  Thats the pen that drew the box that then got filled red.  In Shoes, it‚Äôs called the <code class="language-plaintext highlighter-rouge">stroke</code>.  Stroke!</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">fill</span> <span class="n">red</span>
    <span class="n">stroke</span> <span class="n">red</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
    
    <span class="n">fill</span> <span class="n">blue</span>
    <span class="n">stroke</span> <span class="n">blue</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">30</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Nice.  Well, not much left to do here, but remember our friend Roy G. Biv, and draw it out!  I‚Äôm going to snug the colors up against each other also, but not having a gap between the top of the next rectangle and the bottom of the first one.  We know where that is because it‚Äôs the top of the rectangle plus the height.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">fill</span> <span class="n">red</span>
    <span class="n">stroke</span> <span class="n">red</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>

    <span class="n">fill</span> <span class="n">orange</span>
    <span class="n">stroke</span> <span class="n">orange</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">20</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
    
    <span class="n">fill</span> <span class="n">yellow</span>
    <span class="n">stroke</span> <span class="n">yellow</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">30</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>

    <span class="n">fill</span> <span class="n">green</span>
    <span class="n">stroke</span> <span class="n">green</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">40</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>

    <span class="n">fill</span> <span class="n">blue</span>
    <span class="n">stroke</span> <span class="n">blue</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">50</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>

    <span class="n">fill</span> <span class="n">indigo</span>
    <span class="n">stroke</span> <span class="n">indigo</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">60</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>

    <span class="n">fill</span> <span class="n">violet</span>
    <span class="n">stroke</span> <span class="n">violet</span>
    <span class="n">rect</span> <span class="ss">left: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">top: </span><span class="mi">70</span><span class="p">,</span> <span class="ss">width: </span><span class="mi">100</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">10</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Now you‚Äôve got this!</p>

<p><img src="/assets/shoes_for_rainbows/rainbow1.png" alt="rainbow1.png" /></p>

<p>Sweet!  Though it‚Äôs sort of tedious to write isn‚Äôt it?  And it doesn‚Äôt feel very rubyish.  Well, and this is one of the things I think is so cool about Shoes, it‚Äôs all just ruby!  So we can use all of our ruby tools like we would usually.  Looking at it, there are a lot of things that are the same so how bout we clean that up?  Let‚Äôs make all the things that stay the same constants?  And lets notice that the only thing that increases is the top of each band of the rainbow and make that into a variable.  So we‚Äôre going to add to that the value of the band height for each subsequent band of the rainbow.</p>

<p>And lastly, lets put all those colors into an array and go through them in a loop!  Why not?</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">RAINBOW_WIDTH</span> <span class="o">=</span> <span class="mi">100</span>
<span class="no">BAND_HEIGHT</span> <span class="o">=</span> <span class="mi">10</span>
<span class="no">RAINBOW_LEFT_POSITION</span> <span class="o">=</span> <span class="mi">10</span>

<span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  
  <span class="n">colors_of_the_rainbow</span> <span class="o">=</span> <span class="p">[</span><span class="n">red</span><span class="p">,</span> <span class="n">orange</span><span class="p">,</span> <span class="n">yellow</span><span class="p">,</span> <span class="n">green</span><span class="p">,</span> <span class="n">blue</span><span class="p">,</span> <span class="n">indigo</span><span class="p">,</span> <span class="n">violet</span><span class="p">]</span>
  <span class="n">top</span> <span class="o">=</span> <span class="mi">10</span>

  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">colors_of_the_rainbow</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">color</span><span class="o">|</span>
      <span class="n">fill</span> <span class="n">color</span>
      <span class="n">stroke</span> <span class="n">color</span>
      <span class="n">rect</span> <span class="ss">left: </span><span class="no">RAINBOW_LEFT_POSITION</span><span class="p">,</span> 
           <span class="ss">top: </span><span class="n">top</span><span class="p">,</span> 
           <span class="ss">width: </span><span class="no">RAINBOW_WIDTH</span><span class="p">,</span> 
           <span class="ss">height: </span><span class="no">BAND_HEIGHT</span>

      <span class="n">top</span> <span class="o">+=</span> <span class="no">BAND_HEIGHT</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Looking good.  That‚Äôs a rainbow to be proud of.  Or, well, is it?  What if it wasn‚Äôt.  I‚Äôve seen a few rainbows in my life, and that rainbow is a square.  I‚Äôm sorta thinking it should be, like, rainbow shapped.  Check it.  Lets switch out that <code class="language-plaintext highlighter-rouge">rect</code> for an <code class="language-plaintext highlighter-rouge">arc</code>.</p>

<p>Arc‚Äôs are cool but can also be confusing because it requires remembering a couple of things from trig.  This is the basic format of an arc in Shoes:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @my_arc = arc left, top, width, height, angle1, angle2
</code></pre></div></div>

<p>Ok, thats all pretty much the same as the rectangle, but we‚Äôve got two new things, those angle1‚Äôs and angle2‚Äôs.  Angle1 is the first angle, where 0 is at the 3 o‚Äôclock position in a circle.  If you look at this diagram, angle1 = 0 is the red line, angle2 is the angle to draw the second line at, which is the purple line.  These two lines describe the arc of the circle in yellow.</p>

<p><img src="/assets/shoes_for_rainbows/circle.png" alt="circle.png" /></p>

<p>One thing that I didn‚Äôt know that gave me a whole mess of trouble was that Shoes likes to refer to these angles in Radians.  I also didn‚Äôt know that 0 degrees was 3 o‚Äôclock; I thought 0 degrees was 12 o‚Äôclock and 3 o‚Äôclock would‚Äôve been 90 degrees.  On top of that, if you give the arc angles as 0 and 90, you get a circle!  Whhaaaa?</p>

<p>Thats because the pen is drawing the arc 90 radians around which is ~5156 degrees, which if you don‚Äôt see it going round and round, just looks like a circle.</p>

<p>So!  Remembering (or looking it up as I did) that there are 2 pi radians in a circle, if we want our rainbow arc to start on the left side and go around, aka, be a half circle, we‚Äôre going to use the angle1 as <code class="language-plaintext highlighter-rouge">Shoes::PI</code> and the angle2 as 0.  Shoes has some nice things to help with PI, like having it conveniently stored in a constant for you.</p>

<p>So with some modifications, we get this code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>RAINBOW_WIDTH = 100
BAND_HEIGHT = 100
RAINBOW_LEFT_POSITION = 10

Shoes.app width: 600, height: 600 do
  
  colors_of_the_rainbow = [red, orange, yellow, green, blue, indigo, violet]
  top = 10
  
  @color_stack = stack do
    colors_of_the_rainbow.each do |color|
      
      stroke color
      arc  left: RAINBOW_LEFT_POSITION, 
           top: top, 
           width: RAINBOW_WIDTH, 
           height: BAND_HEIGHT,
           angle1: 0,
           angle2: Shoes::PI

      top += BAND_HEIGHT
    end
  end
end

</code></pre></div></div>
<p>Which gives us this screen shot:</p>

<p><img src="/assets/shoes_for_rainbows/nofill.png" alt="nofill.png" /></p>

<p>Which for sure is not what we‚Äôre after.  Shoes defaults to filling shapes with things.  The way to fix this is with the easy <code class="language-plaintext highlighter-rouge">nofill</code> command, but that still wouldn‚Äôt fix this.  We‚Äôre also going to control the thickness of the arc by using the <code class="language-plaintext highlighter-rouge">strokewidth</code> command, which will be how thick the pen is that‚Äôs drawing the arc.</p>

<p>And, of course, these arcs are also ‚Äòupside down‚Äô so to speak.  And the spacing is all wrong.  One thing at a time!  So lets tell Shoes to draw our arcs starting on the left side of the circle (which is Shoes::PI) and draw from there to 0.  And for spacing, that‚Äôs also a little trickier.</p>

<p>We want the height and width of the the arc to be equal so that the arc isn‚Äôt distorted in any direction.  So let‚Äôs see what these changes get us to.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">RAINBOW_WIDTH</span> <span class="o">=</span> <span class="mi">100</span>
<span class="no">BAND_HEIGHT</span> <span class="o">=</span> <span class="mi">100</span>
<span class="no">RAINBOW_LEFT_POSITION</span> <span class="o">=</span> <span class="mi">10</span>

<span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  
  <span class="n">colors_of_the_rainbow</span> <span class="o">=</span> <span class="p">[</span><span class="n">red</span><span class="p">,</span> <span class="n">orange</span><span class="p">,</span> <span class="n">yellow</span><span class="p">,</span> <span class="n">green</span><span class="p">,</span> <span class="n">blue</span><span class="p">,</span> <span class="n">indigo</span><span class="p">,</span> <span class="n">violet</span><span class="p">]</span>
  <span class="n">top</span> <span class="o">=</span> <span class="mi">10</span>
  <span class="n">band_thickness</span> <span class="o">=</span> <span class="mi">10</span>

  <span class="n">strokewidth</span> <span class="n">band_thickness</span>
  <span class="n">nofill</span>

  <span class="vi">@color_stack</span> <span class="o">=</span> <span class="n">stack</span> <span class="k">do</span>
    <span class="n">colors_of_the_rainbow</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">color</span><span class="o">|</span>
      
      <span class="n">stroke</span> <span class="n">color</span>
      <span class="n">arc</span>  <span class="ss">left: </span><span class="no">RAINBOW_LEFT_POSITION</span><span class="p">,</span> 
           <span class="ss">top: </span><span class="n">top</span><span class="p">,</span> 
           <span class="ss">width: </span><span class="no">RAINBOW_WIDTH</span><span class="p">,</span> 
           <span class="ss">height: </span><span class="no">BAND_HEIGHT</span><span class="p">,</span>
           <span class="ss">angle1: </span><span class="no">Shoes</span><span class="o">::</span><span class="no">PI</span><span class="p">,</span>
           <span class="ss">angle2: </span><span class="mi">0</span>

      <span class="n">top</span> <span class="o">+=</span> <span class="no">BAND_HEIGHT</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>And that gives us:</p>

<p><img src="/assets/shoes_for_rainbows/spacing.png" alt="spacing.png" /></p>

<p>Which is really looking good and we need one more fix!  Rainbows don‚Äôt stack like that.  The colors have to go ‚Äòinside‚Äô the previous one.  How are we gonna do that?!  Well, we previously made the decision to have all these constants because things weren‚Äôt changing that much.  But now the left of the rainbow is going to change on every band, getting further from the left side and nesting in the previous color.  The top is going to get lower to make sure the top of the arc is also nested correctly.  The width and height are also going to change because the overall dimensions are going to also have to get smaller and smaller for each successive band.</p>

<p>So making those changes we wind up with this final logic:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Shoes</span><span class="p">.</span><span class="nf">app</span> <span class="ss">width: </span><span class="mi">600</span><span class="p">,</span> <span class="ss">height: </span><span class="mi">600</span> <span class="k">do</span>
  <span class="n">colors_of_the_rainbow</span> <span class="o">=</span> <span class="p">[</span><span class="n">red</span><span class="p">,</span> <span class="n">orange</span><span class="p">,</span> <span class="n">yellow</span><span class="p">,</span> <span class="n">green</span><span class="p">,</span> <span class="n">blue</span><span class="p">,</span> <span class="n">indigo</span><span class="p">,</span> <span class="n">violet</span><span class="p">]</span>

  <span class="n">band_thickness</span> <span class="o">=</span> <span class="mi">10</span>
  <span class="n">draw_left</span> <span class="o">=</span> <span class="mi">100</span>
  <span class="n">draw_top</span> <span class="o">=</span> <span class="mi">200</span>
  <span class="n">band_width</span> <span class="o">=</span> <span class="mi">400</span>
  <span class="n">band_height</span> <span class="o">=</span> <span class="mi">400</span>

  <span class="n">nofill</span>
  <span class="n">strokewidth</span> <span class="n">band_thickness</span>

  <span class="n">colors_of_the_rainbow</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">color_rgb</span><span class="o">|</span>
    <span class="n">stroke</span><span class="p">(</span><span class="n">color_rgb</span><span class="p">)</span>

    <span class="n">arc</span> <span class="n">draw_left</span><span class="p">,</span> <span class="n">draw_top</span><span class="p">,</span> <span class="n">band_width</span><span class="p">,</span> <span class="n">band_height</span><span class="p">,</span> <span class="no">Shoes</span><span class="o">::</span><span class="no">PI</span><span class="p">,</span> <span class="mi">0</span>

    <span class="n">draw_left</span> <span class="o">+=</span> <span class="n">band_thickness</span>
    <span class="n">draw_top</span> <span class="o">+=</span> <span class="n">band_thickness</span>
    <span class="n">band_width</span> <span class="o">-=</span> <span class="p">(</span><span class="n">band_thickness</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">band_height</span> <span class="o">-=</span> <span class="p">(</span><span class="n">band_thickness</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Cool!</p>

<p>A couple of changes to note: I‚Äôm drawing much further to the left and from the top to start with in order to get my rainbow in the middle of the screen.  I‚Äôm also trying to draw a bigger rainbow because‚Ä¶ it‚Äôs a rainbow!</p>

<p>Also, notice how the left and top are being added to in order to move the starting point of the arc down and to the left.  That wasn‚Äôt initially obvious to me.  And the width and height are getting smaller, the square of the arc getting smaller to fit the band in side of the previous band.  And that <code class="language-plaintext highlighter-rouge">band_thickness * 2</code>?  We want to account for the width of the band on the left side AND the right.</p>

<p>And lets see what all that gives us!</p>

<p><img src="/assets/shoes_for_rainbows/rainbow_final.png" alt="rainbow_final.png" /></p>

<p>Yes!  I say yes!</p>

<p>A final thought.  One great thing about working with tools like Shoes is that even though it has all these special methods and ways of doing things (like <code class="language-plaintext highlighter-rouge">strokewidth</code>, <code class="language-plaintext highlighter-rouge">nofill</code>, <code class="language-plaintext highlighter-rouge">arc</code>, <code class="language-plaintext highlighter-rouge">rect</code> and even how the coordinates are referenced) its also still just Ruby.  Learning how to mix Ruby ways of doing things, like putting the colors in an array, with the framework of Shoes helps develop the same skills that people use when using other frameworks like Rails.  Love it.</p>

<p>I hope this was fun and made sense and helped describe a way for thinking about working with things in Shoes.  If anything is not clear, email me or tweet me and I‚Äôll try to fix it up or make it clear.  If you have any questions about getting started with Shoes or anything else on that front, let me know, please and I‚Äôll see what I can do.  If I‚Äôve gotten anything wrong about my understanding about shoes, please also let me know!</p>

<p>Lastly, Shoes is an awesome community.  If you want to learn a little more about them, follow some of the links below.</p>

<p>Thanks for following along and Shoes on!</p>

<p>Here‚Äôre some relevant links for futher illumination and investigation:</p>
<ul>
  <li><a href="http://confreaks.tv/videos/rubyconf2017-a-new-pair-of-shoes">A New Pair of Shoes</a></li>
  <li><a href="http://jasonrclark.com/">Jason Clark</a></li>
  <li><a href="https://shoesrb.com">Shoes website</a></li>
  <li><a href="https://github.com/shoes/shoes4">Shoes4 project on github</a></li>
  <li><a href="http://shoesrb.com/manual/Hello.html">The Manual</a></li>
</ul>
:ET